{"version":3,"sources":["redux/quiz/quiz.types.js","components/checkbox/checkbox.component.jsx","redux/quiz/quiz.actions.js","components/form-control-label/form-control-label.component.jsx","components/question/question.component.jsx","components/custom-button/custom-button.component.jsx","components/modal/modal.component.jsx","pages/quiz/quiz.component.jsx","App.js","serviceWorker.js","redux/quiz/quiz.reducer.js","redux/root.reducer.js","redux/store.js","index.js"],"names":["QuizTypes","SET_CHECKBOX","SET_SUBMITTED","GreenCheckbox","withStyles","root","color","colors","green","checked","props","Checkbox","RedCheckbox","red","connect","state","submitted","quiz","dispatch","setCheckbox","quizIdx","optionIdx","type","payload","option","valid","disabled","onChange","event","target","GreenFormControlLabel","FormControlLabel","RedFormControlLabel","otherProps","control","label","className","FormGroup","question","responses","map","idx","key","explication","CustomButton","handleSubmit","Button","variant","fullWidth","onClick","useStyles","makeStyles","theme","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","ModalComponent","open","handleClose","score","classes","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","id","Number","parseFloat","toFixed","quizes","setSubmitted","React","useState","setOpen","setScore","scoreFinal","reduce","note","length","App","Boolean","window","location","hostname","match","INITIAL_STATE","quizReducer","action","newState","cloneDeep","combineReducers","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b30ba17e.chunk.js","sourcesContent":["const QuizTypes = {\r\n  SET_CHECKBOX: \"SET_CHECKBOX\",\r\n  SET_SUBMITTED: \"SET_SUBMITTED\"\r\n};\r\n\r\nexport default QuizTypes;","import React from \"react\";\r\n\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {Checkbox, colors, withStyles} from \"@material-ui/core\";\r\n\r\nimport './checkbox.styles.scss';\r\nimport {setCheckbox} from \"../../redux/quiz/quiz.actions\";\r\n\r\nconst GreenCheckbox = withStyles({\r\n  root: {\r\n    color: colors.green[400],\r\n    '&$checked': {\r\n      color: colors.green[900],\r\n    },\r\n  },\r\n  checked: {},\r\n})((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\nconst RedCheckbox = withStyles({\r\n  root: {\r\n    color: colors.red[400],\r\n    '&$checked': {\r\n      color: colors.red[900],\r\n    },\r\n  },\r\n  checked: {},\r\n})((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\nconst CheckBoxComponent = ({option, quizIdx, optionIdx, setCheckbox, submitted}) => {\r\n  if (submitted && (option.checked ^ option.valid )){\r\n    return (\r\n      <RedCheckbox\r\n        checked={option.checked ? option.checked : false}\r\n        disabled={submitted}\r\n        onChange={(event) => {\r\n          const checked = event.target.checked;\r\n          setCheckbox(checked, quizIdx, optionIdx);\r\n        }}\r\n      />\r\n    )\r\n  } else if (submitted && !(option.checked ^ option.valid )) {\r\n    return (\r\n      <GreenCheckbox\r\n        checked={option.checked ? option.checked : false}\r\n        disabled={submitted}\r\n        onChange={(event) => {\r\n          const checked = event.target.checked;\r\n          setCheckbox(checked, quizIdx, optionIdx);\r\n        }}\r\n      />\r\n    )\r\n  }\r\n  return (<Checkbox\r\n    checked={option.checked ? option.checked : false}\r\n    disabled={submitted}\r\n    onChange={(event) => {\r\n      const checked = event.target.checked;\r\n      setCheckbox(checked, quizIdx, optionIdx);\r\n    }}\r\n    color='primary'\r\n  />)\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setCheckbox: (checked, quizIdx, optionIdx) => dispatch(setCheckbox(checked, quizIdx, optionIdx)),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  submitted: state.quiz.submitted\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckBoxComponent);","import QuizTypes from \"./quiz.types\";\r\n\r\nexport const setCheckbox = (checked, quizIdx, optionIdx) => ({\r\n  type: QuizTypes.SET_CHECKBOX,\r\n  payload: {\r\n    checked,\r\n    quizIdx,\r\n    optionIdx\r\n  }\r\n});\r\n\r\nexport const setSubmitted = (submitted) => ({\r\n  type: QuizTypes.SET_SUBMITTED,\r\n  payload: {\r\n    submitted\r\n  }\r\n});","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {FormControlLabel, colors} from \"@material-ui/core\";\r\n\r\nimport './form-control-label.styles.scss';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport CheckBoxComponent from \"../checkbox/checkbox.component\";\r\n\r\nconst GreenFormControlLabel = withStyles({\r\n  root: {\r\n    color: colors.green[900]\r\n  },\r\n})((props) => <FormControlLabel {...props} />);\r\n\r\nconst RedFormControlLabel = withStyles({\r\n  root: {\r\n    color: colors.red[900]\r\n  },\r\n})((props) => <FormControlLabel {...props} />);\r\n\r\nconst FormControlLabelComponent = ({submitted, option, ...otherProps}) => {\r\n  if (submitted && (option.checked ^ option.valid )){\r\n    return <RedFormControlLabel control={<CheckBoxComponent option={option} {...otherProps} />} label={option.label}/>\r\n  } else if (submitted && !(option.checked ^ option.valid )) {\r\n    return <GreenFormControlLabel control={<CheckBoxComponent option={option} {...otherProps} />} label={option.label}/>\r\n  } else {\r\n    return <FormControlLabel control={<CheckBoxComponent option={option} {...otherProps} />} label={option.label} />\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  submitted: state.quiz.submitted\r\n});\r\n\r\nexport default connect(mapStateToProps)(FormControlLabelComponent);","import React from \"react\";\r\nimport {FormGroup} from \"@material-ui/core\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport './question.styles.scss';\r\nimport FormControlLabelComponent from \"../form-control-label/form-control-label.component\";\r\n\r\nconst Question = ({quiz, quizIdx, submitted}) => (\r\n  <div className='question'>\r\n    <FormGroup>\r\n      <p>{quiz.question}</p>\r\n      {\r\n        quiz.responses.map((option, idx) => (\r\n          <div className='option' key={idx}>\r\n            <FormControlLabelComponent\r\n              option={option}\r\n              quizIdx={quizIdx}\r\n              optionIdx={idx}\r\n            />\r\n            {\r\n              option.explication && submitted && option.checked && !option.valid ?\r\n                <div className='explication'>{option.explication}</div>: null\r\n            }\r\n            {\r\n              submitted && !option.checked && option.valid ?\r\n                <div className='explication'>This should be selected !</div>: null\r\n            }\r\n          </div>\r\n        ))\r\n      }\r\n    </FormGroup>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  submitted: state.quiz.submitted,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Question);","import React from \"react\";\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nimport './cutom-button.styles.scss';\r\n\r\nconst CustomButton = ({handleSubmit, disabled}) => (\r\n  <Button variant=\"contained\" color=\"primary\" fullWidth={false} onClick={handleSubmit} disabled={disabled}>\r\n    Submit\r\n  </Button>\r\n);\r\n\r\nexport default CustomButton;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nconst ModalComponent = ({open, handleClose, score}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <h2 id=\"transition-modal-title\">Your score is:</h2>\r\n            <p id=\"transition-modal-description\">{Number.parseFloat(score).toFixed(2)}%</p>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalComponent;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport './quiz.styles.scss';\r\n\r\nimport Question from \"../../components/question/question.component\";\r\nimport CustomButton from \"../../components/custom-button/custom-button.component\";\r\nimport {setSubmitted} from \"../../redux/quiz/quiz.actions\";\r\nimport ModalComponent from \"../../components/modal/modal.component\";\r\n\r\nconst Quiz = ({quizes, submitted, setSubmitted}) => {\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [score, setScore] = React.useState(0);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    handleOpen();\r\n    setSubmitted(true);\r\n    let scoreFinal = quizes.reduce((score, quiz) => {\r\n      return score + quiz.responses.reduce((note, option) => {\r\n        return !(option.checked ^ option.valid) && note;\r\n      }, true) ? 1 : 0;\r\n    }, 0)/ quizes.length;\r\n    setScore(scoreFinal);\r\n  }\r\n\r\n  return (\r\n    <div className=\"quiz\">\r\n      {\r\n        quizes.map((quiz, idx) => <Question\r\n          quiz={quiz}\r\n          key={idx}\r\n          quizIdx={idx}\r\n        />)\r\n      }\r\n      <div className='button'>\r\n        <CustomButton handleSubmit={handleSubmit} disabled={submitted}/>\r\n      </div>\r\n      <ModalComponent open={open} handleClose={handleClose} score={score} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setSubmitted: (submitted) => dispatch(setSubmitted(submitted)),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  quizes: state.quiz.quizes,\r\n  submitted: state.quiz.submitted,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz);","import React from 'react';\nimport './App.scss';\nimport Quiz from \"./pages/quiz/quiz.component\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h2>AI Quiz</h2>\n      <Quiz />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import QuizTypes from \"./quiz.types\";\r\nimport cloneDeep from 'lodash/cloneDeep';\r\n\r\nconst INITIAL_STATE = {\r\n  quizes: [\r\n    {\r\n      question: \"1.\tWhat is true about deductive reasoning:\",\r\n      responses: [\r\n        {\r\n          label: \"It uses a top-down approach\",\r\n          valid: true,\r\n          checked: false\r\n        },\r\n        {\r\n          label: \"the conclusions are probabilistic\",\r\n          valid: false,\r\n          explication: \"This is inductive reasoning. In deductive, reasoning uses available facts, information, or knowledge to assume a valid conclusion\",\r\n          checked: false\r\n        },\r\n        {\r\n          label: \"It moves from generalized statement to an effective conclusion \",\r\n          valid: true,\r\n          checked: false\r\n        },\r\n        {\r\n          label: \"fast and easy, as we need evidence instead of true facts\",\r\n          valid: false,\r\n          explication: \"Wrong. In contrast, it is difficult because we need facts to be true\",\r\n          checked: false\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      question: \"2.\tUnivariate, bivariate and multivariate data differ in:\",\r\n      responses: [\r\n        {\r\n          label: \"The number of dependent variables\",\r\n          valid: true,\r\n          checked: false\r\n        },\r\n        {\r\n          label: \"How to deal with causes and relationships\",\r\n          valid: false,\r\n          explication: \"Wrong, because in univariate data we have one variable. Our main purpose is to describe data and find patterns\",\r\n          checked: false\r\n        },\r\n        {\r\n          label: \"How to perform analysis in data\",\r\n          valid: true,\r\n          explication: \"That’s right. The ways to perform analysis in data depends on the goals we want to achieve\",\r\n          checked: false\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      question: \"3. What is skewed data:\",\r\n      responses: [\r\n        {\r\n          label: \"Normal distribution of data\",\r\n          valid: false,\r\n          checked: false\r\n        },\r\n        {\r\n          label: \"Not symmetric distribution\",\r\n          valid: true,\r\n          checked: false\r\n        },\r\n        {\r\n          label: \"Any data that contains outliers\",\r\n          valid: false,\r\n          checked: false\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      question: \"4. Data wrangling:\",\r\n      responses: [\r\n        {\r\n          label: \"Known as data Munging\",\r\n          valid: true,\r\n          checked: false\r\n        },\r\n        {\r\n          label: \"Convert raw data to an appropriate form to advanced tasks\",\r\n          valid: true,\r\n          checked: false\r\n        },\r\n        {\r\n          label: \"Last step in Data preprocessing\",\r\n          valid: true,\r\n          checked: false\r\n        },\r\n        {\r\n          label: \"Convert raw data to a clean form\",\r\n          valid: false,\r\n          explication: \"Wrong. This is preprocessing\",\r\n          checked: false\r\n        },\r\n        {\r\n          label: \"Convert data from a given form to more usable and informative form\",\r\n          valid: false,\r\n          explication: \"Wrong, this is Processing of data\",\r\n          checked: false\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      question: \"5. Independent variable in a dataset:\",\r\n      responses: [\r\n        {\r\n          label: \"Feature\",\r\n          valid: true,\r\n          checked: false\r\n        },\r\n        {\r\n          label: \"Input\",\r\n          valid: true,\r\n          checked: false\r\n        },\r\n        {\r\n          label: \"Label\",\r\n          valid: false,\r\n          explication: \"Wrong. This is called dependent variable\",\r\n          checked: false\r\n        },\r\n        {\r\n          label: \"Outcome\",\r\n          valid: false,\r\n          explication: \"Wrong. This is called dependent variable\",\r\n          checked: false\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      question: \"6. Methods to detect and remove noise in a dataset:\",\r\n      responses: [\r\n        {\r\n          label: \"K-fold validation\",\r\n          valid: true,\r\n          checked: false\r\n        },\r\n        {\r\n          label: \"One class SVM\",\r\n          valid: true,\r\n          checked: false\r\n        },\r\n        {\r\n          label: \"Neural network\",\r\n          valid: true,\r\n          checked: false\r\n        },\r\n        {\r\n          label: \"Auto encoder\",\r\n          valid: true,\r\n          checked: false\r\n        },\r\n        {\r\n          label: \"Clustering\",\r\n          valid: true,\r\n          checked: false\r\n        },\r\n        {\r\n          label: \"Density-based algorithms\",\r\n          valid: true,\r\n          checked: false\r\n        },\r\n      ]\r\n    },\r\n    {\r\n      question: \"7. How can we handle missing data effectively:\",\r\n      responses: [\r\n        {\r\n          label: \"Always delete data rows with missing values \",\r\n          valid: false,\r\n          explication: \"We can’t do this all the time because we will lose a lot of information; it is possible only when percentage of missing values is (<5%) or almost values in the row are missing\",\r\n          checked: false\r\n        },\r\n        {\r\n          label: \"Drop column with missing data and pretend that the variable does not existed\",\r\n          valid: true,\r\n          explication: \"Right in condition that 15% of data is missing in that column\",\r\n          checked: false\r\n        },\r\n        {\r\n          label: \"Replace the missing value with the previous or next value\",\r\n          valid: false,\r\n          explication: \"This does not solve the problem, because we risk to have missing value also in the next or previous value\",\r\n          checked: false\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      question: \"8.\tData Leakage is\",\r\n      responses: [\r\n        {\r\n          label: \"Less data\",\r\n          valid: false\r\n        },\r\n        {\r\n          label: \"The training data contains information about the target which will not be available when predicting.\",\r\n          valid: true\r\n        },\r\n        {\tlabel: \" It leads to poor performances in on the training set, but high prediction performances\",\r\n          valid: false,\r\n          explication: \"In contrary\"\r\n        },\r\n        {\tlabel: \"Not carefully distinguish training data from validation data\",\r\n          valid: true\r\n        },\r\n        {\tlabel:\"Variables updated (or created) after the target value is realized is included\",\r\n          valid: false,\r\n          explication: \"To prevent this type of data leakage, any variable updated (or created) after the target value is realized should be excluded.\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      question: \"9.\tWhat is true about the following statements\",\r\n      responses:[\r\n        {\r\n          label:\" If the data is skewed then, missing values can be imputed or replaced by mean of the all observations of the dataset\",\r\n          valid: false,\r\n          explication:\"This is the case for normally distributed data.\"\r\n        },\r\n        {\r\n          label:\"If the data is skewed then, it is better to impute or replace the missing values by Median of all observations of the dataset.\",\r\n          valid: true\r\n        },\r\n        {\r\n          label: \"Median is the middle value in a dataset\",\r\n          valid: true,\r\n          explication: \"Alright. Mean is the average of a dataset, and mode is the most frequently observation in a dataset\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      question: \"10.\tWhat are dummy variables\",\r\n      responses:[\r\n        {\r\n          label: \"New variables created from categories presented in categorical variable\",\r\n          valid: true\r\n        },\r\n        {\r\n          label: \"Variables created to transform categorical data to numbers\",\r\n          valid: true\r\n        },\r\n        {\r\n          label: \"Independent variables\",\r\n          valid: false,\r\n          explication:\" They could be applied to both dependent and indepedent variables\"\r\n        },\r\n        {\r\n          label: \"Created using one hot encoding\",\r\n          valid: true\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      question:\"11.\tData Binning\",\r\n      responses:[\r\n        {\r\n          label:\" Transform categorical variables into numerical\",\r\n          valid:false,\r\n          explication:\"In  contrary\"\r\n        },\r\n        {\r\n          label:\"Data processing method\",\r\n          valid:false,\r\n          explication:\" It is data preprocessing\"\r\n        },\r\n        {\r\n          label:\"Quantization technique to handle continuous variables\",\r\n          valid:true\r\n        },\r\n        {\r\n          label:\"Fixed-width binning is based on domain knowledge to create fix width bins\",\r\n          valid:true\r\n        },\r\n        {\r\n          label:\"In fixed-width binning, data distribution decides bin ranges for itself\",\r\n          valid:false,\r\n          explication:\"Wrong. This is called adaptive binning\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      question:\"12.\tWhat is true about normalization\",\r\n      responses:[\r\n        {\r\n          label:\"Normalization is the process of rescaling feature so that they will follow normal distribution\",\r\n          valid: false,\r\n          explication:\" Of course not. This is called standardization\"\r\n        },\r\n        {\r\n          label:\"Normalization shrinks the range of  data so that the range is fixed between 0 and 1.\",\r\n          valid:true\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      question:\"13.\tIn the case of imbalanced data\",\r\n      responses:[\r\n        {\r\n          label:\"Accuracy is the best metric to use\",\r\n          valid: false,\r\n          explication:\" It can be very misleading. Althought, we can use confusion matrix, precision, recall, F1:score\"\r\n        },\r\n        {\r\n          label:\"Decision trees frequently perform well on imbalanced data\",\r\n          valid:true\r\n        },\r\n        {\r\n          label:\"Resampling techniques like oversample minority class or under sample majority class are beneficial in case of imbalanced data\",\r\n          valid:true,\r\n          explication:\"Warning!! oversampling should be done after data splitting into test and train\"\r\n        },\r\n        {\r\n          label:\"SMOTE uses KNN to generate synthetic training data\",\r\n          valid: true\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      question:\"14.\tWhat is true about feature extraction and feature selection\",\r\n      responses:[\r\n        {\r\n          label:\"Feature selection is choosing some feature based on domain knowledge\",\r\n          valid:true\r\n        },\r\n        {\r\n          label:\"Feature extraction is creating new data from original one\",\r\n          valid:true\r\n        },\r\n        {\r\n          label:\"Feature selection create new subset of new data while feature extraction extract some variables from dataset\",\r\n          valid: false\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      question:\"15.\twhat is mulicollinearity?\",\r\n      responses:[\r\n        {\r\n          label:\"It means that two variables are parallel and not related\",\r\n          valid: false,\r\n          explication:\"It is totally the contrary. it means they arehighly correlated\"\r\n        },\r\n        {\r\n          label:\" creating new variable from existing one could cause colinearity\",\r\n          valid:true\r\n        },\r\n        {\r\n          label:\"High correlation\",\r\n          valid:true,\r\n          explication: \"We could discover correlation between two variables with a scatter plot, and strength of correlation with the correlation matrix\"\r\n        },\r\n        {\r\n          label:\"Reduce multicolinearity by adding more data\",\r\n          valid:true\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      question:\"16.\tPrincipal component analysis, PCA\",\r\n      responses:[\r\n        {\r\n          label:\"is a technique of feature selection\",\r\n          valid:false,\r\n          explication:\"This is a very common error. PCA select some variables from original dataset then create new ones\"\r\n        },\r\n        {\r\n          label:\"Searches for a linear combination of variables that best separates 2 classes\",\r\n          valid:true\r\n        },\r\n        {\r\n          label:\"It is a supervised algorithm that reduce dimensionality and classify data\",\r\n          valid:false,\r\n          explication:\"PCA is usupervised and dedicated to dimensionality reduction only\"\r\n        },\r\n        {\r\n          label:\"Standardization is a must before PCA\",\r\n          valid:true,\r\n          explication:\"Scaling data is a requirement for the optimal performance of PCA\"\r\n        },\r\n        {\r\n          label:\"The core of coponent analysis is built on the concept of eigenvectors and eigenvalues\",\r\n          valid:true,\r\n          explication:\"The technique of Eigenvectors and Eigenvalues are used to compress the data.Eigenvectors are used to make linear transformation understandable. \"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      question:\"17.\tLinear Discriminant analysis\",\r\n      responses:[\r\n        {\r\n          label:\"It is a way to reduce ‘dimensionality’ while at the same time preserving as much of the class discrimination information as possible.\",\r\n          valid:true,\r\n          explication:\"Perfectly right. LDA is a supervised algorithm that takes into consideration the class label\"\r\n        },\r\n        {\r\n          label:\"Performs better  when we have few samples per class\",\r\n          valid:false,\r\n          explication:\"PCA is better in this case. Whereas LDA works better with large dataset having multiple classes\"\r\n        },\r\n        {\r\n          label:\"It finds centroid for each class then projects data points on a line so that clusters are as separated as possible\",\r\n          valid:true\r\n        },\r\n\r\n        {\r\n          label:\"Unlike PCA. It makes assumptions about normally distributed classes and equal class covariances\",\r\n          valid:true\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      question:\"18.\tRegression analysis\",\r\n      responses:[\r\n        {\r\n          label:\"It's all about finding relationship between dependent variables and independent variables\",\r\n          valid:true\r\n        },\r\n        {\r\n          label:\"Applicable only if the solution is linear\",\r\n          valid:true\r\n        },\r\n        {\r\n          label:\"Independent variables may be continuous or discrete, while dependent variable is discrete\",\r\n          valid:false,\r\n          explication: \"Independent variables may be continuous or discrete, while dependent variable is continuous\"\r\n        },\r\n        {\r\n          label:\"Logistic regression is a classification algorithm where dependent variable is binary.\",\r\n          valid:true\r\n        },\r\n        {\r\n          label:\"In the Polynomial Regression, the best fit line is a straight line\",\r\n          valid:false,\r\n          explication:\"Nope! it can be a curve line which can fit the model perfectly\"\r\n        },\r\n        {\r\n          label:\"Stepwise regression fits the regression model by adding/dropping predictors on each step based on a specified criterion.\",\r\n          valid:true,\r\n          explication:\"It aims to maximize the prediction power with minimum number of predictors.\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      question:\"19.\tWhat are regression loss functions?\",\r\n      responses:[\r\n        {\r\n          label:\"Mean Square Error (L2 loss)\",\r\n          valid:true,\r\n          explication:\"It is a measure of how close a fitted line is to actual data points.\"\r\n        },\r\n        {\r\n          label:\"Root Mean Square Error\",\r\n          valid:false\r\n        },\r\n        {\r\n          label:\"Mean Absolute Error(L1 loss)\",\r\n          valid:true,\r\n          explication:\"It measures the magnitude of error without considering their direction. MAE is more robust to outliers since it does not make use of square.\"\r\n        },\r\n        {\r\n          label:\"Huber Loss\",\r\n          valid:true,\r\n          explication:\"It is less sensitive to outliers in data. it is an Absolute error but when the Error is small then it becomes MSE\"\r\n        },\r\n        {\r\n          label:\"Log-Cos h Loss\",\r\n          valid:true,\r\n          explication:\"Log-cosh is the logarithm of the hyperbolic cosine function of the prediction error.\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      question:\"20.\tSigmoid function\",\r\n      responses:[\r\n        {\r\n          label:\"It takes real value as an input and gives probability which is in between 0 and 1\",\r\n          valid:true\r\n        },\r\n        {\r\n          label:\"It is linear in nature\",\r\n          valid:false\r\n        },\r\n        {\r\n          label:\"It convert high values to 0 and low values to 1\",\r\n          valid:true\r\n        },\r\n        {\r\n          label:\"It takes real value as an input and gives probability which is in between 0 and 1\",\r\n          valid:true\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      question:\"21.\tLogistic regression\",\r\n      responses:[\r\n        {\r\n          label:\"Linear relationship between dependent and independent variables is required\",\r\n          valid:false\r\n        },\r\n        {\r\n          label:\"The independent variable should not be correlated with each other\",\r\n          valid:true\r\n        },\r\n        {\r\n          label:\"The data is modeled using a straight line\",\r\n          valid:false,\r\n          explication:\"The probability of events is represented as a linear function of a combination of independent variables\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      question:\"22.\tKNN classifier\",\r\n      responses:[\r\n        {\r\n          label:\"assumes that similar things exist in close proximity\",\r\n          valid:true\r\n        },\r\n        {\r\n          label:\"For categorical variables it uses Euclidean, Manhattan or Minkowski distances\",\r\n          valid:false,\r\n          explication:\" Those distances are used for numerical variables. However with categorical variables, the hamming distance must be used.\"\r\n        },\r\n        {\r\n          label:\"It is an eager learner\",\r\n          valid:false,\r\n          explication:\"It is a lazy learner. Because it doesn’t learn a discriminative function from the training data but memorizes the training dataset instead.\"\r\n        },\r\n        {\r\n          label:\"It does require a lot of training to find the nearest neighbor\",\r\n          valid:false,\r\n          explication:\"There is no training time in KNN. Simply because it is lazy :p\"\r\n        },\r\n        {\r\n          label:\"It doesn't work well when the number of inputs is very large neither with high dimensional data\",\r\n          valid:true\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      question:\"23.\tNaive bayes (NB)\",\r\n      responses:[\r\n        {\r\n          label:\"Assumes that all features are independent of each other\",\r\n          valid:true,\r\n          explication:\" Well that's the secret behind naive adjective. ;)\"\r\n        },\r\n        {\r\n          label:\"It is a discriminative classifier\",\r\n          valid:false,\r\n          explication:\"It is a generative classifier. It ?learns the joint probability distribution p (x, y). It predicts the conditional probability with the help of Bayes Theorem. A Discriminative model ?models the decision boundary between the classes. A Discriminative model ?learns the conditional probability distribution p (y |x).\"\r\n        },\r\n        {\r\n          label:\"Sometimes it become unable to make a prediction\",\r\n          valid:true,\r\n          explication:\"when the test data contain a categorie which didn't exist in training data\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      question:\"24.\tTree-based models\",\r\n      responses:[\r\n        {\r\n          label:\"It uses many trees, and it makes a prediction by averaging the predictions of each component tree. \",\r\n          valid:false,\r\n          explication:\"This is random forest. They perform better than one decision tree\"\r\n        },\r\n        {\r\n          label:\"Calculate the probability of a given record and classify it by assigning it to the most likely class\",\r\n          valid:true\r\n        },\r\n        {\r\n          label:\"It is a parametric model\",\r\n          valid:false,\r\n          explication:\"It is non parametric model\"\r\n        },\r\n        {\r\n          label:\"A very good classifier with continuous data\",\r\n          valid:false,\r\n          explication:\"It performs better with categorical data. But with continuous data it uses the variance to choose the best split with preference to lowest variance.\"\r\n        },\r\n        {\r\n          label:\"Underfitting is when a decision tree fails to capture important distinctions and patterns in the data, so it performs poorly even in training data.\",\r\n          valid:true,\r\n          explication:\"overfitting is where a model matches the training data almost perfectly, but does poorly in validation and other new data.\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      question:\"25.\tHow to deal with categorical variables\",\r\n      responses:[\r\n        {\r\n          label:\"In one hot encoding there is no ordering in the categorical data.\",\r\n          valid:true\r\n        },\r\n        {\r\n          label:\"One hot encoding assigns each unique value to a different integer.\",\r\n          valid:false,\r\n          explication:\"This is label encoding. While one hot encoding creates new columns indicating the presence (or absence) of each possible value in the original data.\"\r\n        },\r\n        {\r\n          label:\"Label encoding replaces each categorical value with the number of times it appears in the dataset\",\r\n          valid:false,\r\n          explication:\"It is Count encoding.\"\r\n        },\r\n        {\r\n          label:\"Catboost encoding replaces a categorical value with the average value of the target for that value of the feature.\",\r\n          valid:false,\r\n          explication:\"Wrong. This is called target encoding\"\r\n        },\r\n        {\r\n          label:\"Target encoding replaces a categorical value with the average value of the target for that value of the feature.\",\r\n          valid:true\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  submitted: false\r\n};\r\n\r\nconst quizReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case QuizTypes.SET_CHECKBOX:\r\n      const {checked, quizIdx, optionIdx} = action.payload;\r\n      let newState = cloneDeep(state);\r\n      newState.quizes[quizIdx].responses[optionIdx].checked = checked;\r\n      return newState;\r\n    case QuizTypes.SET_SUBMITTED:\r\n      const {submitted} = action.payload;\r\n      return {\r\n        ...state,\r\n        submitted\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default quizReducer;","import { combineReducers } from \"redux\";\r\nimport quizReducer from \"./quiz/quiz.reducer\";\r\n\r\nexport default combineReducers({\r\n  quiz: quizReducer\r\n});","import {applyMiddleware, createStore} from \"redux\";\r\n\r\nimport rootReducer from './root.reducer';\r\n\r\nconst middlewares = [];\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}